{"version":3,"sources":["assets/icons/timeIcon.svg","assets/icons/viewsIcon.svg","utils/getMouseDistance.ts","hooks/useMouseDistance.ts","hooks/usePageVisits.ts","hooks/usePageMilliseconds.ts","utils/millisecondsToTime.ts","components/Article.tsx","App.tsx","assets/snippits/hookCodeSnippits.ts","serviceWorker.ts","index.tsx","assets/icons/mouseIcon.svg"],"names":["module","exports","getMouseDistance","previousX","previousY","currentX","currentY","Math","round","sqrt","pow","useMouseDistance","useState","x","y","position","setPosition","mouseDistance","setMouseDistance","useEffect","mouseMoveHandler","event","clientX","clientY","window","addEventListener","removeEventListener","usePageVisits","parseInt","localStorage","getItem","pageVisits","setItem","toString","usePageMilliseconds","Date","now","date","setDate","pageMilliseconds","setPageMilliseconds","timer","setInterval","clearInterval","millisecondsToTime","milliseconds","toISOString","slice","Icon","styled","Container","CodeBlock","Span","ArticleHeader","Article","heading","iconSource","iconAlt","value","codeSnippit","src","alt","Header","Footer","App","viewsIcon","timeIcon","mouseIcon","href","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5789b7ce.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/timeIcon.c81f4f85.svg\";","module.exports = __webpack_public_path__ + \"static/media/viewsIcon.269c63a5.svg\";","const getMouseDistance = (previousX: number, previousY: number, currentX: number, currentY: number) =>\n  Math.round(Math.sqrt(Math.pow(previousY - currentY, 2) + Math.pow(previousX - currentX, 2)));\n\nexport default getMouseDistance;","import { useState, useEffect } from 'react';\r\nimport getMouseDistance from '../utils/getMouseDistance';\r\n\r\nconst useMouseDistance = () => {\r\n  const [position, setPosition] = useState({ x: 0, y: 0 });\r\n  const [mouseDistance, setMouseDistance] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const mouseMoveHandler = (event: MouseEvent) => {\r\n      if (position.x && position.y) {\r\n        setMouseDistance(\r\n          mouseDistance + getMouseDistance(position.x, position.y, event.clientX, event.clientY)\r\n        );\r\n      }\r\n      setPosition({ x: event.clientX, y: event.clientY });\r\n    }\r\n\r\n    window.addEventListener('mousemove', mouseMoveHandler);\r\n\r\n    return () => {\r\n      window.removeEventListener('mousemove', mouseMoveHandler);\r\n    }\r\n  }, [position, mouseDistance]);\r\n\r\n  return [mouseDistance];\r\n}\r\n\r\nexport default useMouseDistance;","import { useState, useEffect } from 'react';\n\nconst PAGE_VISITS_KEY = 'pageVisits';\n\nconst usePageVisits = () => {\n  const [pageVisits] = useState(parseInt(localStorage.getItem(PAGE_VISITS_KEY) || '1'));\n\n  useEffect(() => {\n    localStorage.setItem(PAGE_VISITS_KEY, (pageVisits + 1).toString());\n  }, [pageVisits]);\n\n  return [pageVisits];\n}\n\nexport default usePageVisits;\n","import { useState, useEffect } from 'react';\n\nconst usePageMilliseconds = () => {\n  const [date, setDate] = useState(Date.now());\n  const [pageMilliseconds, setPageMilliseconds] = useState(0);\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setPageMilliseconds(Date.now() - date + pageMilliseconds);\n      setDate(Date.now());\n    }, 100);\n\n    return () => {\n      clearInterval(timer);\n    }\n  }, [date, pageMilliseconds]);\n\n  return [pageMilliseconds];\n}\n\nexport default usePageMilliseconds;","const millisecondsToTime = (milliseconds: number) => new Date(milliseconds).toISOString().slice(11, -5);\n\nexport default millisecondsToTime;","import React from 'react';\nimport styled from 'styled-components';\n\nconst Icon = styled('img')`\n  min-width: 40px;\n  min-height: 40px;\n  margin: 12px;\n`;\n\nconst Container = styled('article')`\n  width: 80vw;\n  padding: 40px 0;\n`;\n\nconst CodeBlock = styled('pre')`\n  overflow-x: scroll;\n  background: whitesmoke;\n  border: solid 1px lightgrey;\n  border-radius: 4px;\n  padding: 0 12px;\n`;\n\nconst Span = styled('span')`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 28px;\n  font-weight: normal;\n`;\n\nconst ArticleHeader = styled('h2')`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  flex-wrap: wrap;\n`;\n\ntype TArticleProps = {\n  heading: string;\n  iconSource: string;\n  iconAlt: string;\n  value: React.ReactNode;\n  codeSnippit: string;\n}\n\nconst Article: React.FC<TArticleProps> = ({\n  heading,\n  iconSource,\n  iconAlt,\n  value,\n  codeSnippit,\n}) => {\n  return (\n    <Container>\n      <ArticleHeader>\n        {heading}\n        <Span>\n          <Icon src={iconSource} alt={iconAlt} /> {value}\n        </Span>\n      </ArticleHeader>\n      <CodeBlock>\n        <code>\n          {codeSnippit}\n        </code>\n      </CodeBlock>\n    </Container>\n  );\n}\n\nexport default Article;\n","import React from 'react';\nimport mouseIcon from './assets/icons/mouseIcon.svg';\nimport timeIcon from './assets/icons/timeIcon.svg';\nimport viewsIcon from './assets/icons/viewsIcon.svg';\nimport useMouseDistance from './hooks/useMouseDistance';\nimport usePageVisits from './hooks/usePageVisits';\nimport usePageMilliseconds from './hooks/usePageMilliseconds';\nimport millisecondsToTime from './utils/millisecondsToTime';\nimport styled from 'styled-components';\nimport { usePageVisitsCode, usePageMillisecondsCode, useMouseDistanceCode } from './assets/snippits/hookCodeSnippits';\nimport Article from './components/Article';\n\nconst Container = styled('main')`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n  min-height: 100vh;\n  overflow-x: hidden;\n`;\n\nconst Header = styled('header')`\n  margin: 24px;\n  h1 {\n    font-size: 44px;\n  }\n`;\n\nconst Footer = styled('footer')`\n  padding: 24px;\n  font-weight: bold;\n`;\n\nconst App: React.FC = () => {\n  const [mouseDistance] = useMouseDistance();\n  const [pageVisits] = usePageVisits();\n  const [pageMilliseconds] = usePageMilliseconds();\n\n  return (\n    <Container>\n      <Header>\n        <h1>React Custom Hook Examples</h1>\n      </Header>\n      <Article\n        heading=\"Page Visits\"\n        iconSource={viewsIcon}\n        iconAlt=\"Views Icon\"\n        value={pageVisits}\n        codeSnippit={usePageVisitsCode}\n      />\n      <Article\n        heading=\"Time on Page\"\n        iconSource={timeIcon}\n        iconAlt=\"Time Icon\"\n        value={millisecondsToTime(pageMilliseconds)}\n        codeSnippit={usePageMillisecondsCode}\n      />\n      <Article\n        heading=\"Mouse Distance\"\n        iconSource={mouseIcon}\n        iconAlt=\"Mouse Icon\"\n        value={`${mouseDistance}px`}\n        codeSnippit={useMouseDistanceCode}\n      />\n      <Footer>\n        by Rowan Carmichael - check out the code on Github <a href=\"https://github.com/RowanCarmichael/react-custom-hooks\">here</a>\n      </Footer>\n    </Container>\n  );\n}\n\nexport default App;\n","export const usePageMillisecondsCode = `\nconst usePageMilliseconds = () => {\n  const [date, setDate] = useState(Date.now());\n  const [pageMilliseconds, setPageMilliseconds] = useState(0);\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setPageMilliseconds(Date.now() - date + pageMilliseconds);\n      setDate(Date.now());\n    }, 100);\n\n    return () => {\n      clearInterval(timer);\n    }\n  }, [date, pageMilliseconds]);\n\n  return [pageMilliseconds];\n}\n`;\n\nexport const useMouseDistanceCode = `\nconst useMouseDistance = () => {\n  const [position, setPosition] = useState({ x: 0, y: 0 });\n  const [mouseDistance, setMouseDistance] = useState(0);\n\n  useEffect(() => {\n    const mouseMoveHandler = (event: MouseEvent) => {\n      if (position.x && position.y) {\n        setMouseDistance(\n          mouseDistance + getMouseDistance(position.x, position.y, event.clientX, event.clientY)\n        );\n      }\n      setPosition({ x: event.clientX, y: event.clientY });\n    }\n\n    window.addEventListener('mousemove', mouseMoveHandler);\n\n    return () => {\n      window.removeEventListener('mousemove', mouseMoveHandler);\n    }\n  }, [position, mouseDistance]);\n\n  return [mouseDistance];\n}\n`;\n\nexport const usePageVisitsCode = `\nconst usePageVisits = () => {\n  const [pageVisits] = useState(parseInt(localStorage.getItem(PAGE_VISITS_KEY) || '1'));\n\n  useEffect(() => {\n    localStorage.setItem(PAGE_VISITS_KEY, (pageVisits + 1).toString());\n  }, [pageVisits]);\n\n  return [pageVisits];\n}\n`;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/mouseIcon.44a55371.svg\";"],"sourceRoot":""}