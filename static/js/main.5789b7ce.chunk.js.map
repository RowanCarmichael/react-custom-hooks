{"version":3,"sources":["assets/icons/timeIcon.svg","assets/icons/viewsIcon.svg","utils/getMouseDistance.ts","hooks/useMouseDistance.ts","hooks/usePageVisits.ts","hooks/usePageMilliseconds.ts","utils/millisecondsToTime.ts","components/Article.tsx","App.tsx","assets/snippits/hookCodeSnippits.ts","serviceWorker.ts","index.tsx","assets/icons/mouseIcon.svg"],"names":["module","exports","getMouseDistance","previousX","previousY","currentX","currentY","Math","round","sqrt","pow","useMouseDistance","useState","x","y","position","setPosition","mouseDistance","setMouseDistance","useEffect","mouseMoveHandler","event","clientX","clientY","window","addEventListener","removeEventListener","usePageVisits","parseInt","localStorage","getItem","pageVisits","setItem","toString","usePageMilliseconds","Date","now","date","setDate","pageMilliseconds","setPageMilliseconds","timer","setInterval","clearInterval","millisecondsToTime","milliseconds","toISOString","slice","Icon","styled","Container","CodeBlock","Span","ArticleHeader","Article","heading","iconSource","iconAlt","value","codeSnippit","src","alt","Header","Footer","App","viewsIcon","timeIcon","mouseIcon","href","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5789b7ce.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/timeIcon.c81f4f85.svg\";","module.exports = __webpack_public_path__ + \"static/media/viewsIcon.269c63a5.svg\";","const getMouseDistance = (previousX: number, previousY: number, currentX: number, currentY: number) =>\r\n  Math.round(Math.sqrt(Math.pow(previousY - currentY, 2) + Math.pow(previousX - currentX, 2)));\r\n\r\nexport default getMouseDistance;","import { useState, useEffect } from 'react';\r\nimport getMouseDistance from '../utils/getMouseDistance';\r\n\r\nconst useMouseDistance = () => {\r\n  const [position, setPosition] = useState({ x: 0, y: 0 });\r\n  const [mouseDistance, setMouseDistance] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const mouseMoveHandler = (event: MouseEvent) => {\r\n      if (position.x && position.y) {\r\n        setMouseDistance(\r\n          mouseDistance + getMouseDistance(position.x, position.y, event.clientX, event.clientY)\r\n        );\r\n      }\r\n      setPosition({ x: event.clientX, y: event.clientY });\r\n    }\r\n\r\n    window.addEventListener('mousemove', mouseMoveHandler);\r\n\r\n    return () => {\r\n      window.removeEventListener('mousemove', mouseMoveHandler);\r\n    }\r\n  }, [position, mouseDistance]);\r\n\r\n  return [mouseDistance];\r\n}\r\n\r\nexport default useMouseDistance;","import { useState, useEffect } from 'react';\r\n\r\nconst PAGE_VISITS_KEY = 'pageVisits';\r\n\r\nconst usePageVisits = () => {\r\n  const [pageVisits] = useState(parseInt(localStorage.getItem(PAGE_VISITS_KEY) || '1'));\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(PAGE_VISITS_KEY, (pageVisits + 1).toString());\r\n  }, [pageVisits]);\r\n\r\n  return [pageVisits];\r\n}\r\n\r\nexport default usePageVisits;\r\n","import { useState, useEffect } from 'react';\r\n\r\nconst usePageMilliseconds = () => {\r\n  const [date, setDate] = useState(Date.now());\r\n  const [pageMilliseconds, setPageMilliseconds] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setPageMilliseconds(Date.now() - date + pageMilliseconds);\r\n      setDate(Date.now());\r\n    }, 100);\r\n\r\n    return () => {\r\n      clearInterval(timer);\r\n    }\r\n  }, [date, pageMilliseconds]);\r\n\r\n  return [pageMilliseconds];\r\n}\r\n\r\nexport default usePageMilliseconds;","const millisecondsToTime = (milliseconds: number) => new Date(milliseconds).toISOString().slice(11, -5);\r\n\r\nexport default millisecondsToTime;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Icon = styled('img')`\r\n  min-width: 40px;\r\n  min-height: 40px;\r\n  margin: 12px;\r\n`;\r\n\r\nconst Container = styled('article')`\r\n  width: 80vw;\r\n  padding: 40px 0;\r\n`;\r\n\r\nconst CodeBlock = styled('pre')`\r\n  overflow-x: scroll;\r\n  background: whitesmoke;\r\n  border: solid 1px lightgrey;\r\n  border-radius: 4px;\r\n  padding: 0 12px;\r\n`;\r\n\r\nconst Span = styled('span')`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 28px;\r\n  font-weight: normal;\r\n`;\r\n\r\nconst ArticleHeader = styled('h2')`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\ntype TArticleProps = {\r\n  heading: string;\r\n  iconSource: string;\r\n  iconAlt: string;\r\n  value: React.ReactNode;\r\n  codeSnippit: string;\r\n}\r\n\r\nconst Article: React.FC<TArticleProps> = ({\r\n  heading,\r\n  iconSource,\r\n  iconAlt,\r\n  value,\r\n  codeSnippit,\r\n}) => {\r\n  return (\r\n    <Container>\r\n      <ArticleHeader>\r\n        {heading}\r\n        <Span>\r\n          <Icon src={iconSource} alt={iconAlt} /> {value}\r\n        </Span>\r\n      </ArticleHeader>\r\n      <CodeBlock>\r\n        <code>\r\n          {codeSnippit}\r\n        </code>\r\n      </CodeBlock>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Article;\r\n","import React from 'react';\r\nimport mouseIcon from './assets/icons/mouseIcon.svg';\r\nimport timeIcon from './assets/icons/timeIcon.svg';\r\nimport viewsIcon from './assets/icons/viewsIcon.svg';\r\nimport useMouseDistance from './hooks/useMouseDistance';\r\nimport usePageVisits from './hooks/usePageVisits';\r\nimport usePageMilliseconds from './hooks/usePageMilliseconds';\r\nimport millisecondsToTime from './utils/millisecondsToTime';\r\nimport styled from 'styled-components';\r\nimport { usePageVisitsCode, usePageMillisecondsCode, useMouseDistanceCode } from './assets/snippits/hookCodeSnippits';\r\nimport Article from './components/Article';\r\n\r\nconst Container = styled('main')`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  align-content: center;\r\n  min-height: 100vh;\r\n  overflow-x: hidden;\r\n`;\r\n\r\nconst Header = styled('header')`\r\n  margin: 24px;\r\n  h1 {\r\n    font-size: 44px;\r\n  }\r\n`;\r\n\r\nconst Footer = styled('footer')`\r\n  padding: 24px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst App: React.FC = () => {\r\n  const [mouseDistance] = useMouseDistance();\r\n  const [pageVisits] = usePageVisits();\r\n  const [pageMilliseconds] = usePageMilliseconds();\r\n\r\n  return (\r\n    <Container>\r\n      <Header>\r\n        <h1>React Custom Hook Examples</h1>\r\n      </Header>\r\n      <Article\r\n        heading=\"Page Visits\"\r\n        iconSource={viewsIcon}\r\n        iconAlt=\"Views Icon\"\r\n        value={pageVisits}\r\n        codeSnippit={usePageVisitsCode}\r\n      />\r\n      <Article\r\n        heading=\"Time on Page\"\r\n        iconSource={timeIcon}\r\n        iconAlt=\"Time Icon\"\r\n        value={millisecondsToTime(pageMilliseconds)}\r\n        codeSnippit={usePageMillisecondsCode}\r\n      />\r\n      <Article\r\n        heading=\"Mouse Distance\"\r\n        iconSource={mouseIcon}\r\n        iconAlt=\"Mouse Icon\"\r\n        value={`${mouseDistance}px`}\r\n        codeSnippit={useMouseDistanceCode}\r\n      />\r\n      <Footer>\r\n        by Rowan Carmichael - check out the code on Github <a href=\"https://github.com/RowanCarmichael/react-custom-hooks\">here</a>\r\n      </Footer>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export const usePageMillisecondsCode = `\r\nconst usePageMilliseconds = () => {\r\n  const [date, setDate] = useState(Date.now());\r\n  const [pageMilliseconds, setPageMilliseconds] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setPageMilliseconds(Date.now() - date + pageMilliseconds);\r\n      setDate(Date.now());\r\n    }, 100);\r\n\r\n    return () => {\r\n      clearInterval(timer);\r\n    }\r\n  }, [date, pageMilliseconds]);\r\n\r\n  return [pageMilliseconds];\r\n}\r\n`;\r\n\r\nexport const useMouseDistanceCode = `\r\nconst useMouseDistance = () => {\r\n  const [position, setPosition] = useState({ x: 0, y: 0 });\r\n  const [mouseDistance, setMouseDistance] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const mouseMoveHandler = (event: MouseEvent) => {\r\n      if (position.x && position.y) {\r\n        setMouseDistance(\r\n          mouseDistance + getMouseDistance(position.x, position.y, event.clientX, event.clientY)\r\n        );\r\n      }\r\n      setPosition({ x: event.clientX, y: event.clientY });\r\n    }\r\n\r\n    window.addEventListener('mousemove', mouseMoveHandler);\r\n\r\n    return () => {\r\n      window.removeEventListener('mousemove', mouseMoveHandler);\r\n    }\r\n  }, [position, mouseDistance]);\r\n\r\n  return [mouseDistance];\r\n}\r\n`;\r\n\r\nexport const usePageVisitsCode = `\r\nconst usePageVisits = () => {\r\n  const [pageVisits] = useState(parseInt(localStorage.getItem(PAGE_VISITS_KEY) || '1'));\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(PAGE_VISITS_KEY, (pageVisits + 1).toString());\r\n  }, [pageVisits]);\r\n\r\n  return [pageVisits];\r\n}\r\n`;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.register();\r\n","module.exports = __webpack_public_path__ + \"static/media/mouseIcon.44a55371.svg\";"],"sourceRoot":""}